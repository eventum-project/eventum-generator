[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["eventum"]

[project.urls]
Homepage = 'https://github.com/eventum-project'
Source = 'https://github.com/eventum-project/eventum-generator'
Documentation = 'https://eventum-project.github.io/website/'
Changelog = 'https://github.com/eventum-project/eventum-generator/blob/master/CHANGELOG.md'

[project]
name = "eventum-generator"
description = "Flexible event generator"
authors = [
    {name="Nikita Reznikov", email="nikita.reznikov.public@mail.ru"}
]
license = "Apache-2.0"
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Mocking",
    "Topic :: Software Development :: Testing :: Traffic Generation",
    "Typing :: Typed"
]
requires-python = ">=3.13"
dependencies = [
    "aioconsole>=0.8.1",
    "aiofiles>=24.1.0",
    "case-converter>=1.2.0",
    "click>=8.1.8",
    "clickhouse-connect>=0.8.15",
    "croniter>=6.0.0",
    "dateparser>=1.2.1",
    "faker>=37.0.0",
    "fastapi>=0.115.11",
    "flatten-dict>=0.4.2",
    "griffe>=1.6.0",
    "httpx>=0.28.1",
    "jinja2>=3.1.6",
    "keyring>=25.6.0",
    "keyrings-cryptfile>=1.3.9",
    "lru-dict>=1.3.0",
    "mimesis>=18.0.0",
    "msgspec>=0.19.0",
    "numpy>=2.2.3",
    "pwinput>=1.0.3",
    "pydantic>=2.10.6",
    "pytz>=2025.1",
    "pyyaml>=6.0.2",
    "rich>=13.9.4",
    "setproctitle>=1.3.5",
    "structlog>=25.1.0",
    "tablib>=3.8.0",
    "uvicorn[standard]>=0.34.0",
    "uvloop>=0.21.0",
]
dynamic = ["version"]

[tool.hatch.version]
path = 'eventum/__init__.py'

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "plotly>=6.0.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.25.3",
    "pytest-cov>=6.0.0",
    "pytest-html>=4.1.1",
    "pytest-httpx>=0.35.0",
    "requests>=2.32.3",
    "ruff>=0.9.10",
    "types-aiofiles>=24.1.0.20241221",
    "types-croniter>=5.0.1.20241205",
    "types-dateparser>=1.2.0.20250208",
    "types-pytz>=2025.1.0.20250204",
    "types-pyyaml>=6.0.12.20241230",
]

[project.scripts]
eventum = "eventum.cli.commands.eventum:cli"
eventum-keyring = "eventum.cli.commands.eventum_keyring:cli"


[tool.pytest.ini_options]
console_output_style = "count"
addopts = [
    "-v",
    "--cov=eventum",
    "--cov-report=html"
]

[tool.pytest.plugins]
pytest-html = { report_name = "pytest_report" }

[tool.ruff]
line-length = 79

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "A001",     # builtin-variable-shadowing
    "A002",     # builtin-argument-shadowing
    "A006",     # builtin-lambda-argument-shadowing
    "ANN401",   # any-type
    "D105",     # undocumented-magic-method
    "D205",     # missing-blank-line-after-summary
    "S311",     # suspicious-non-cryptographic-random-usage
    "S701",     # jinja2-autoescape-false
    "TRY400",   # error-instead-of-exception
]
flake8-quotes = {inline-quotes = "single", multiline-quotes = "double"}
exclude = ["**/tests/**"]

[tool.ruff.format]
quote-style = "single"

[tool.git-cliff.changelog]
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""

# https://keats.github.io/tera/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] ({{ timestamp | date(format="%Y-%m-%d") }})
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
            {% if commit.breaking %}[**breaking**] {% endif %}\
            {{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""

footer = """
<!-- generated by git-cliff -->
"""

trim = true

postprocessors = []

[tool.git-cliff.git]
conventional_commits = true
filter_unconventional = true
split_commits = false
commit_preprocessors = []

commit_parsers = [
  { message = "^feat", group = "<!-- 0 -->🚀 Features" },
  { message = "^fix", group = "<!-- 1 -->🐛 Bug Fixes" },
  { message = "^doc", group = "<!-- 3 -->📚 Documentation" },
  { message = "^perf", group = "<!-- 4 -->⚡ Performance" },
  { message = "^refactor", group = "<!-- 2 -->🚜 Refactor" },
  { message = "^style", group = "<!-- 5 -->🎨 Styling" },
  { message = "^test", group = "<!-- 6 -->🧪 Testing" },
  { message = "^chore\\(release\\): prepare for", skip = true },
  { message = "^chore\\(deps.*\\)", skip = true },
  { message = "^chore\\(pr\\)", skip = true },
  { message = "^chore\\(pull\\)", skip = true },
  { message = "^chore|^ci", group = "<!-- 7 -->⚙️ Miscellaneous Tasks" },
  { body = ".*security", group = "<!-- 8 -->🛡️ Security" },
  { message = "^revert", group = "<!-- 9 -->◀️ Revert" },
  { message = ".*", group = "<!-- 10 -->💼 Other" },
]

filter_commits = false
topo_order = false
sort_commits = "oldest"
